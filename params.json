{
  "name": "Homatisation",
  "tagline": "",
  "body": "# Homatisation\r\n\r\nThe purpose of this repo is to generate a simple front interface to make api calls. This app has been designed for use with the\r\n[broadlink rm-pro](http://amzn.to/2hiTWk5) and the [rm-bridge android app](https://play.google.com/store/apps/details?id=de.fun2code.android.rmbridge)\r\n\r\nAn android version of the front is available in [cordova/releases folder](https://github.com/gpenverne/homatisation/tree/master/cordova/releases)\r\n\r\n## Install\r\n### Installing dependencies\r\n```bash\r\n$ composer install\r\n```\r\n### Installing assets\r\n```bash\r\n$ bower install\r\n```\r\n### WebServer configuration\r\nUsing nginx:\r\n```\r\n    location / {\r\n        try_files $uri /index.php$is_args$args;\r\n    }\r\n```\r\n\r\n## Recipes\r\nA recipe contains actions.  \r\nPut your recipes files in the recipes folder.  \r\nCheck the test-recipe.yml file for sample configuration.  \r\nPut your images in the web/images folder.  \r\n\r\n### Test a recipe yml syntax\r\n```bash\r\n$ bin/yaml-lint recipes/[recipe-file-name].yml\r\n```\r\n\r\n### Create a recipe using command line\r\n```bash\r\n$ bin/console recipes:create\r\n```\r\n\r\n### Exec a recipe using command line\r\n```bash\r\n$ bin/console recipes:exec [recipeName] [on|off|toggle]\r\n```\r\n\r\n### Exec a recipe using the front\r\nJust click on the picture to make a toggle execution.  \r\nYour http server should target the web/ subfolder.  \r\n\r\n### tags\r\nEach recipe can have one or more tags. These tags will be shown in the slide menu (android app).\r\n\r\n## Actions\r\nAn action is a string following this syntax: provider_name:provider_method:optional_argument .\r\n\r\n### Exec an action using command line\r\n```bash\r\n$ bin/console actions:exec\r\n$ bin/console actions:exec [provider_name:provider_method:optional_argument]\r\n```\r\n\r\n## Providers\r\nA provider allows to make actions. Providers parameters are read from app/config/config.yml.  \r\nEach provider should be configuread like this:  \r\n```\r\n    my_provider_name:\r\n        provider: [android|api|binary|freebox|logger|milight|sleep]\r\n        ...\r\n```\r\n\r\nEach provider has dedicated parameters, see below.\r\n#### Android\r\nAllows to launch apps (only in the android app).  \r\nSample commands: android:openApp:com.google.android.music  \r\n#### Api\r\nAllows to make network calls.  \r\nParameters: base_url the base url to make the calls  \r\nSample commands: api:endPoint:an-endpoint  \r\n#### Binary\r\nAllows to call scripts (using php shell_exec command)  \r\nParameters: binary , the full path to binary  \r\nSample commands: binary:command:arg ; binary:echo:arg  \r\n#### Freebox\r\nAllows to control freebox using the hd1.freebox.fr api  \r\nParameters: remote_code , the remote code.  \r\nSample commands: freebox: key:home ; freebox: key:1 ; freebox: key:power  \r\n#### Logger\r\nSimply write into logs (in var/logs folder) using monolog.  \r\nParameters: log_file the target log file  \r\nSample commands: logger:info:go-to-on  \r\n#### Milight\r\nAllows to control milight wifi controller, thanks to [yasharrashedi/LimitlessLED](https://github.com/yasharrashedi/LimitlessLED).  \r\nParameters: host, the milight host ip address.  \r\nSample commands: milight:rgbwAllOn ; milight:rgbwAllOff  \r\n#### Sleep\r\nMake a pause between actions  \r\nSample commands: sleep:sleep:5  \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}